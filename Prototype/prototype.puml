@startuml
package prototype {
  class App {
    + main(args : String[]) {static}
  }
  interface Prototype {
    + clone() : Object {abstract}
  }
  abstract class Beast{
    + clone() : Object {abstract}
  }
  class ElfBeast {
    - helpType : String
    + ElfBeast(elfBeast : ElfBeast)
    + ElfBeast(helpType : String)
    + clone() : ElfBeast
    + equals(obj : Object) : boolean
    + toString() : String
  }
  class OrcBeast {
    - weapon : String
    + OrcBeast(orcBeast : OrcBeast)
    + OrcBeast(weapon : String)
    + copy() : OrcBeast
    + equals(obj : Object) : boolean
    + toString() : String
  }
  interface HeroFactory {
    + createBeast() : Beast {abstract}
  }
  class HeroFactoryImpl {
    - beast : Beast
    + HeroFactoryImpl(beast : Beast)
    + createBeast() : Beast
  }
}
Beast ..|> Prototype
ElfBeast --|> Beast
OrcBeast --|> Beast
HeroFactoryImpl -->  "-beast" Beast
HeroFactoryImpl ..|> HeroFactory
App ..> HeroFactory
@enduml